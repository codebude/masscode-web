name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to build (leave empty to use latest)'
        required: false
        type: string
      tag_as_latest:
        description: 'Tag image as latest'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get latest version tag
      id: get-tag
      if: inputs.version == ''
      run: |
        git fetch --tags
        
        LATEST_TAG=$(git tag | grep '^v[0-9]\+\.[0-9]\+\.[0-9]\+\(-rc\.[0-9]\+\)\?$' | sort -V | tail -1)                
        if [ -z "$LATEST_TAG" ]; then
          echo "No version tags found"
          exit 1
        fi
        echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

    - name: Set version tag
      id: version-tag
      run: |
        if [ -n "${{ inputs.version }}" ]; then
          echo "tag=${{ inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${{ steps.get-tag.outputs.tag }}" >> $GITHUB_OUTPUT
        fi

    - name: Checkout tag
      run: |
        git fetch --tags
        git checkout ${{ steps.version-tag.outputs.tag }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Verify build artifacts
      run: |
        if [ ! -f "public/styles.css" ]; then
          echo "Error: styles.css not found after build - build may have failed"
          exit 1
        fi
        echo "âœ… Build artifacts verified successfully"

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}
          docker.io/codebude/takecode
        tags: |
          type=raw,value=${{ steps.version-tag.outputs.tag }}
          type=raw,value=latest,enable=${{ inputs.tag_as_latest }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ steps.version-tag.outputs.tag }}

    - name: Trigger demo update
      if: inputs.tag_as_latest == true
      run: |
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/dispatches \
          -d '{"event_type": "deploy-demo"}'